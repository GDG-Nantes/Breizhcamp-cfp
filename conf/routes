# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Assets.at(path="/public", file="index.html")

# SecureSocial Login page
GET     /login                      securesocial.controllers.LoginPage.login
GET     /logout                     securesocial.controllers.LoginPage.logout

# SecureSocial User Registration and password handling (only needed if you are using UsernamePasswordProvider)
GET     /signup                     securesocial.controllers.Registration.startSignUp
POST    /signup                     securesocial.controllers.Registration.handleStartSignUp
GET     /signup/:token              securesocial.controllers.Registration.signUp(token)
POST    /signup/:token              securesocial.controllers.Registration.handleSignUp(token)
GET     /reset                      securesocial.controllers.Registration.startResetPassword
POST    /reset                      securesocial.controllers.Registration.handleStartResetPassword
GET     /reset/:token               securesocial.controllers.Registration.resetPassword(token)
POST    /reset/:token               securesocial.controllers.Registration.handleResetPassword(token)
GET     /password                   securesocial.controllers.PasswordChange.page
POST    /password                   securesocial.controllers.PasswordChange.handlePasswordChange

# SecureSocial Providers entry points
GET     /authenticate/:provider     securesocial.controllers.ProviderController.authenticate(provider)
POST    /authenticate/:provider     securesocial.controllers.ProviderController.authenticateByPost(provider)
GET     /not-authorized             securesocial.controllers.ProviderController.notAuthorized

GET     /settings/user/:id          controllers.account.settings.Account.getUser(id:Long)
POST    /settings/account           controllers.account.settings.Account.save()
POST    /settings/mac               controllers.account.settings.Account.changeMac()
POST    /settings/notifs            controllers.account.settings.Notifs.save()
GET     /settings/lien/remove/:id   controllers.account.settings.Account.deleteLink(id:Long)
POST    /settings/email             controllers.account.settings.Account.saveEmail()

POST    /admin/submitusers          controllers.Admin.submitUsers()
GET     /admin/vote                 controllers.Admin.getVoteStatus()
POST    /admin/vote/:newStatus      controllers.Admin.changeVoteStatus(newStatus:String)

POST    /talks/:idTalk/comment      controllers.talks.TalkRestController.saveComment(idTalk:Long)
POST    /talks/:idTalk/comment/:idComment/response  controllers.talks.TalkRestController.saveReponse(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/comment/:idComment/close     controllers.talks.TalkRestController.closeComment(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/comment/:idComment/delete    controllers.talks.TalkRestController.deleteComment(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/comment/:idComment/edit      controllers.talks.TalkRestController.editComment(idTalk:Long,idComment:Long)
POST    /talks/:idTalk/status       controllers.talks.TalkRestController.saveStatus(idTalk:Long)
POST    /talks/:idTalk/vote/:note   controllers.talks.TalkRestController.saveVote(idTalk:Long,note:java.lang.Integer)
GET     /talk/all                   controllers.talks.TalkRestController.all()
GET     /talk/:idTalk               controllers.talks.TalkRestController.getById(idTalk:Long)
GET     /talk                       controllers.talks.TalkRestController.get()
POST	/talk                       controllers.talks.TalkRestController.save()
DELETE	/talk/:idTalk               controllers.talks.TalkRestController.delete(idTalk:Long)
GET	/talk/:idTalk/tags/:tags    controllers.talks.TalkRestController.addTag(idTalk:Long,tags:String)
POST	/talk/:idTalk/tags/:tags    controllers.talks.TalkRestController.addTag(idTalk:Long,tags:String)

GET	/creneau/:idCreneau         controllers.CreneauRestController.get(idCreneau:Long)
GET	/creneau                    controllers.CreneauRestController.all()
POST	/creneau                    controllers.CreneauRestController.save()
DELETE	/creneau/:idCreneau         controllers.CreneauRestController.delete(idCreneau:Long)

GET	/dynamicfield/:idDynamicField   controllers.DynamicFieldRestController.get(idDynamicField:Long)
GET	/dynamicfield			controllers.DynamicFieldRestController.all()
POST	/dynamicfield			controllers.DynamicFieldRestController.save()
DELETE	/dynamicfield/:idDynamicField   controllers.DynamicFieldRestController.delete(idDynamicField:Long)

GET	/user/:userId/talks		controllers.talks.TalkRestController.getTalks(userId:Long)
GET	/user/:userId/talks/:status	controllers.talks.TalkRestController.getTalksByStatus(userId:Long,status:String)

GET     /user/:id                   controllers.UserRestController.getUser(id:Long)
GET	/userLogged                 controllers.UserRestController.getUserLogged()

GET     /admin/users/get            controllers.UserRestController.get()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)


